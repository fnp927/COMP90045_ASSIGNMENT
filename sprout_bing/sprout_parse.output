   0  $accept : %entry% $end

   1  start_state : data_structure function_declaration

   2  data_structure : data_structure TYPEDEF LEFT_PARENTHESIS typedef_body RIGHT_PARENTHESIS IDENTIFIER
   3                 |

   4  typedef_body : typedef_body IDENTIFIER COLON type_stmts comma_temp
   5               | typedef_body IDENTIFIER COLON recursive_list_value_init
   6               |

   7  comma_temp : COMMA
   8             |

   9  type_stmts : IDENTIFIER
  10             | INT
  11             | BOOL

  12  recursive_list_value_init : LEFT_PARENTHESIS typedef_body RIGHT_PARENTHESIS

  13  function_declaration : function_declaration function_header function_body END
  14                       |

  15  function_header : PROC IDENTIFIER LEFT_BRACKET param_recursive RIGHT_BRACKET

  16  param_recursive : param_recursive val_ref type_stmts IDENTIFIER comma_temp
  17                  |

  18  argus_recursive : argus_recursive argus_type comma_temp
  19                  |

  20  argus_type : expr

  21  val_ref : VAL
  22          | REF

  23  function_body : function_body IDENTIFIER dot_term EQ_DOT assign_term SEMICOLON
  24                | function_body type_stmts IDENTIFIER SEMICOLON
  25                | function_body WRITE expr SEMICOLON
  26                | function_body READ IDENTIFIER SEMICOLON
  27                | function_body IDENTIFIER LEFT_BRACKET argus_recursive RIGHT_BRACKET SEMICOLON
  28                | function_body WHILE expr DO function_body OD
  29                | function_body IF expr THEN function_body else_stmt FI
  30                | function_body expr SEMICOLON
  31                |

  32  assign_term : expr
  33              | LEFT_PARENTHESIS value_assignment_comma RIGHT_PARENTHESIS

  34  dot_term :
  35           | DOT IDENTIFIER

  36  value_assignment_comma : LEFT_PARENTHESIS value_assignment_comma RIGHT_PARENTHESIS comma_temp
  37                         | value_assignment_comma IDENTIFIER EQ expr comma_temp
  38                         |

  39  else_stmt : ELSE function_body
  40            |

  41  expr : BOOL_VAL
  42       | INT_VAL
  43       | IDENTIFIER
  44       | expr PLUS expr
  45       | expr MINUS expr
  46       | expr MUL expr
  47       | expr EQ expr
  48       | expr LT expr
  49       | expr GT expr
  50       | MINUS expr
  51       | LEFT_BRACKET expr RIGHT_BRACKET

  52  %entry% : '\001' start_state

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . start_state  (52)
	data_structure : .  (3)

	.  reduce 3

	start_state  goto 3
	data_structure  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	%entry% : '\001' start_state .  (52)

	.  reduce 52


state 4
	start_state : data_structure . function_declaration  (1)
	data_structure : data_structure . TYPEDEF LEFT_PARENTHESIS typedef_body RIGHT_PARENTHESIS IDENTIFIER  (2)
	function_declaration : .  (14)

	TYPEDEF  shift 5
	$end  reduce 14
	PROC  reduce 14

	function_declaration  goto 6


state 5
	data_structure : data_structure TYPEDEF . LEFT_PARENTHESIS typedef_body RIGHT_PARENTHESIS IDENTIFIER  (2)

	LEFT_PARENTHESIS  shift 7
	.  error


state 6
	start_state : data_structure function_declaration .  (1)
	function_declaration : function_declaration . function_header function_body END  (13)

	PROC  shift 8
	$end  reduce 1

	function_header  goto 9


state 7
	data_structure : data_structure TYPEDEF LEFT_PARENTHESIS . typedef_body RIGHT_PARENTHESIS IDENTIFIER  (2)
	typedef_body : .  (6)

	.  reduce 6

	typedef_body  goto 10


state 8
	function_header : PROC . IDENTIFIER LEFT_BRACKET param_recursive RIGHT_BRACKET  (15)

	IDENTIFIER  shift 11
	.  error


state 9
	function_declaration : function_declaration function_header . function_body END  (13)
	function_body : .  (31)

	.  reduce 31

	function_body  goto 12


state 10
	data_structure : data_structure TYPEDEF LEFT_PARENTHESIS typedef_body . RIGHT_PARENTHESIS IDENTIFIER  (2)
	typedef_body : typedef_body . IDENTIFIER COLON type_stmts comma_temp  (4)
	typedef_body : typedef_body . IDENTIFIER COLON recursive_list_value_init  (5)

	IDENTIFIER  shift 13
	RIGHT_PARENTHESIS  shift 14
	.  error


state 11
	function_header : PROC IDENTIFIER . LEFT_BRACKET param_recursive RIGHT_BRACKET  (15)

	LEFT_BRACKET  shift 15
	.  error


state 12
	function_declaration : function_declaration function_header function_body . END  (13)
	function_body : function_body . IDENTIFIER dot_term EQ_DOT assign_term SEMICOLON  (23)
	function_body : function_body . type_stmts IDENTIFIER SEMICOLON  (24)
	function_body : function_body . WRITE expr SEMICOLON  (25)
	function_body : function_body . READ IDENTIFIER SEMICOLON  (26)
	function_body : function_body . IDENTIFIER LEFT_BRACKET argus_recursive RIGHT_BRACKET SEMICOLON  (27)
	function_body : function_body . WHILE expr DO function_body OD  (28)
	function_body : function_body . IF expr THEN function_body else_stmt FI  (29)
	function_body : function_body . expr SEMICOLON  (30)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	WRITE  shift 18
	READ  shift 19
	MINUS  shift 20
	IDENTIFIER  shift 21
	END  shift 22
	LEFT_BRACKET  shift 23
	WHILE  shift 24
	IF  shift 25
	BOOL  shift 26
	INT  shift 27
	.  error

	type_stmts  goto 28
	expr  goto 29


state 13
	typedef_body : typedef_body IDENTIFIER . COLON type_stmts comma_temp  (4)
	typedef_body : typedef_body IDENTIFIER . COLON recursive_list_value_init  (5)

	COLON  shift 30
	.  error


state 14
	data_structure : data_structure TYPEDEF LEFT_PARENTHESIS typedef_body RIGHT_PARENTHESIS . IDENTIFIER  (2)

	IDENTIFIER  shift 31
	.  error


state 15
	function_header : PROC IDENTIFIER LEFT_BRACKET . param_recursive RIGHT_BRACKET  (15)
	param_recursive : .  (17)

	.  reduce 17

	param_recursive  goto 32


state 16
	expr : BOOL_VAL .  (41)

	.  reduce 41


state 17
	expr : INT_VAL .  (42)

	.  reduce 42


state 18
	function_body : function_body WRITE . expr SEMICOLON  (25)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	MINUS  shift 20
	IDENTIFIER  shift 33
	LEFT_BRACKET  shift 23
	.  error

	expr  goto 34


state 19
	function_body : function_body READ . IDENTIFIER SEMICOLON  (26)

	IDENTIFIER  shift 35
	.  error


state 20
	expr : MINUS . expr  (50)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	MINUS  shift 20
	IDENTIFIER  shift 33
	LEFT_BRACKET  shift 23
	.  error

	expr  goto 36


state 21
	type_stmts : IDENTIFIER .  (9)
	function_body : function_body IDENTIFIER . dot_term EQ_DOT assign_term SEMICOLON  (23)
	function_body : function_body IDENTIFIER . LEFT_BRACKET argus_recursive RIGHT_BRACKET SEMICOLON  (27)
	expr : IDENTIFIER .  (43)
	dot_term : .  (34)

	DOT  shift 37
	LEFT_BRACKET  shift 38
	EQ  reduce 43
	LT  reduce 43
	GT  reduce 43
	PLUS  reduce 43
	MINUS  reduce 43
	MUL  reduce 43
	SEMICOLON  reduce 43
	IDENTIFIER  reduce 9
	EQ_DOT  reduce 34

	dot_term  goto 39


state 22
	function_declaration : function_declaration function_header function_body END .  (13)

	.  reduce 13


state 23
	expr : LEFT_BRACKET . expr RIGHT_BRACKET  (51)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	MINUS  shift 20
	IDENTIFIER  shift 33
	LEFT_BRACKET  shift 23
	.  error

	expr  goto 40


state 24
	function_body : function_body WHILE . expr DO function_body OD  (28)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	MINUS  shift 20
	IDENTIFIER  shift 33
	LEFT_BRACKET  shift 23
	.  error

	expr  goto 41


state 25
	function_body : function_body IF . expr THEN function_body else_stmt FI  (29)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	MINUS  shift 20
	IDENTIFIER  shift 33
	LEFT_BRACKET  shift 23
	.  error

	expr  goto 42


state 26
	type_stmts : BOOL .  (11)

	.  reduce 11


state 27
	type_stmts : INT .  (10)

	.  reduce 10


state 28
	function_body : function_body type_stmts . IDENTIFIER SEMICOLON  (24)

	IDENTIFIER  shift 43
	.  error


state 29
	function_body : function_body expr . SEMICOLON  (30)
	expr : expr . PLUS expr  (44)
	expr : expr . MINUS expr  (45)
	expr : expr . MUL expr  (46)
	expr : expr . EQ expr  (47)
	expr : expr . LT expr  (48)
	expr : expr . GT expr  (49)

	EQ  shift 44
	LT  shift 45
	GT  shift 46
	PLUS  shift 47
	MINUS  shift 48
	MUL  shift 49
	SEMICOLON  shift 50
	.  error


state 30
	typedef_body : typedef_body IDENTIFIER COLON . type_stmts comma_temp  (4)
	typedef_body : typedef_body IDENTIFIER COLON . recursive_list_value_init  (5)

	IDENTIFIER  shift 51
	LEFT_PARENTHESIS  shift 52
	BOOL  shift 26
	INT  shift 27
	.  error

	type_stmts  goto 53
	recursive_list_value_init  goto 54


state 31
	data_structure : data_structure TYPEDEF LEFT_PARENTHESIS typedef_body RIGHT_PARENTHESIS IDENTIFIER .  (2)

	.  reduce 2


state 32
	function_header : PROC IDENTIFIER LEFT_BRACKET param_recursive . RIGHT_BRACKET  (15)
	param_recursive : param_recursive . val_ref type_stmts IDENTIFIER comma_temp  (16)

	VAL  shift 55
	REF  shift 56
	RIGHT_BRACKET  shift 57
	.  error

	val_ref  goto 58


state 33
	expr : IDENTIFIER .  (43)

	.  reduce 43


state 34
	function_body : function_body WRITE expr . SEMICOLON  (25)
	expr : expr . PLUS expr  (44)
	expr : expr . MINUS expr  (45)
	expr : expr . MUL expr  (46)
	expr : expr . EQ expr  (47)
	expr : expr . LT expr  (48)
	expr : expr . GT expr  (49)

	EQ  shift 44
	LT  shift 45
	GT  shift 46
	PLUS  shift 47
	MINUS  shift 48
	MUL  shift 49
	SEMICOLON  shift 59
	.  error


state 35
	function_body : function_body READ IDENTIFIER . SEMICOLON  (26)

	SEMICOLON  shift 60
	.  error


state 36
	expr : expr . PLUS expr  (44)
	expr : expr . MINUS expr  (45)
	expr : expr . MUL expr  (46)
	expr : expr . EQ expr  (47)
	expr : expr . LT expr  (48)
	expr : expr . GT expr  (49)
	expr : MINUS expr .  (50)

	.  reduce 50


state 37
	dot_term : DOT . IDENTIFIER  (35)

	IDENTIFIER  shift 61
	.  error


state 38
	function_body : function_body IDENTIFIER LEFT_BRACKET . argus_recursive RIGHT_BRACKET SEMICOLON  (27)
	argus_recursive : .  (19)

	.  reduce 19

	argus_recursive  goto 62


state 39
	function_body : function_body IDENTIFIER dot_term . EQ_DOT assign_term SEMICOLON  (23)

	EQ_DOT  shift 63
	.  error


state 40
	expr : expr . PLUS expr  (44)
	expr : expr . MINUS expr  (45)
	expr : expr . MUL expr  (46)
	expr : expr . EQ expr  (47)
	expr : expr . LT expr  (48)
	expr : expr . GT expr  (49)
	expr : LEFT_BRACKET expr . RIGHT_BRACKET  (51)

	EQ  shift 44
	LT  shift 45
	GT  shift 46
	PLUS  shift 47
	MINUS  shift 48
	MUL  shift 49
	RIGHT_BRACKET  shift 64
	.  error


state 41
	function_body : function_body WHILE expr . DO function_body OD  (28)
	expr : expr . PLUS expr  (44)
	expr : expr . MINUS expr  (45)
	expr : expr . MUL expr  (46)
	expr : expr . EQ expr  (47)
	expr : expr . LT expr  (48)
	expr : expr . GT expr  (49)

	EQ  shift 44
	LT  shift 45
	GT  shift 46
	PLUS  shift 47
	MINUS  shift 48
	MUL  shift 49
	DO  shift 65
	.  error


state 42
	function_body : function_body IF expr . THEN function_body else_stmt FI  (29)
	expr : expr . PLUS expr  (44)
	expr : expr . MINUS expr  (45)
	expr : expr . MUL expr  (46)
	expr : expr . EQ expr  (47)
	expr : expr . LT expr  (48)
	expr : expr . GT expr  (49)

	EQ  shift 44
	LT  shift 45
	GT  shift 46
	PLUS  shift 47
	MINUS  shift 48
	MUL  shift 49
	THEN  shift 66
	.  error


state 43
	function_body : function_body type_stmts IDENTIFIER . SEMICOLON  (24)

	SEMICOLON  shift 67
	.  error


state 44
	expr : expr EQ . expr  (47)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	MINUS  shift 20
	IDENTIFIER  shift 33
	LEFT_BRACKET  shift 23
	.  error

	expr  goto 68


state 45
	expr : expr LT . expr  (48)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	MINUS  shift 20
	IDENTIFIER  shift 33
	LEFT_BRACKET  shift 23
	.  error

	expr  goto 69


state 46
	expr : expr GT . expr  (49)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	MINUS  shift 20
	IDENTIFIER  shift 33
	LEFT_BRACKET  shift 23
	.  error

	expr  goto 70


state 47
	expr : expr PLUS . expr  (44)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	MINUS  shift 20
	IDENTIFIER  shift 33
	LEFT_BRACKET  shift 23
	.  error

	expr  goto 71


state 48
	expr : expr MINUS . expr  (45)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	MINUS  shift 20
	IDENTIFIER  shift 33
	LEFT_BRACKET  shift 23
	.  error

	expr  goto 72


state 49
	expr : expr MUL . expr  (46)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	MINUS  shift 20
	IDENTIFIER  shift 33
	LEFT_BRACKET  shift 23
	.  error

	expr  goto 73


state 50
	function_body : function_body expr SEMICOLON .  (30)

	.  reduce 30


state 51
	type_stmts : IDENTIFIER .  (9)

	.  reduce 9


state 52
	recursive_list_value_init : LEFT_PARENTHESIS . typedef_body RIGHT_PARENTHESIS  (12)
	typedef_body : .  (6)

	.  reduce 6

	typedef_body  goto 74


state 53
	typedef_body : typedef_body IDENTIFIER COLON type_stmts . comma_temp  (4)
	comma_temp : .  (8)

	COMMA  shift 75
	IDENTIFIER  reduce 8
	RIGHT_PARENTHESIS  reduce 8

	comma_temp  goto 76


state 54
	typedef_body : typedef_body IDENTIFIER COLON recursive_list_value_init .  (5)

	.  reduce 5


state 55
	val_ref : VAL .  (21)

	.  reduce 21


state 56
	val_ref : REF .  (22)

	.  reduce 22


state 57
	function_header : PROC IDENTIFIER LEFT_BRACKET param_recursive RIGHT_BRACKET .  (15)

	.  reduce 15


state 58
	param_recursive : param_recursive val_ref . type_stmts IDENTIFIER comma_temp  (16)

	IDENTIFIER  shift 51
	BOOL  shift 26
	INT  shift 27
	.  error

	type_stmts  goto 77


state 59
	function_body : function_body WRITE expr SEMICOLON .  (25)

	.  reduce 25


state 60
	function_body : function_body READ IDENTIFIER SEMICOLON .  (26)

	.  reduce 26


state 61
	dot_term : DOT IDENTIFIER .  (35)

	.  reduce 35


state 62
	argus_recursive : argus_recursive . argus_type comma_temp  (18)
	function_body : function_body IDENTIFIER LEFT_BRACKET argus_recursive . RIGHT_BRACKET SEMICOLON  (27)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	MINUS  shift 20
	IDENTIFIER  shift 33
	LEFT_BRACKET  shift 23
	RIGHT_BRACKET  shift 78
	.  error

	argus_type  goto 79
	expr  goto 80


state 63
	function_body : function_body IDENTIFIER dot_term EQ_DOT . assign_term SEMICOLON  (23)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	MINUS  shift 20
	IDENTIFIER  shift 33
	LEFT_PARENTHESIS  shift 81
	LEFT_BRACKET  shift 23
	.  error

	expr  goto 82
	assign_term  goto 83


state 64
	expr : LEFT_BRACKET expr RIGHT_BRACKET .  (51)

	.  reduce 51


state 65
	function_body : function_body WHILE expr DO . function_body OD  (28)
	function_body : .  (31)

	.  reduce 31

	function_body  goto 84


state 66
	function_body : function_body IF expr THEN . function_body else_stmt FI  (29)
	function_body : .  (31)

	.  reduce 31

	function_body  goto 85


state 67
	function_body : function_body type_stmts IDENTIFIER SEMICOLON .  (24)

	.  reduce 24


state 68
	expr : expr . PLUS expr  (44)
	expr : expr . MINUS expr  (45)
	expr : expr . MUL expr  (46)
	expr : expr . EQ expr  (47)
	expr : expr EQ expr .  (47)
	expr : expr . LT expr  (48)
	expr : expr . GT expr  (49)

	PLUS  shift 47
	MINUS  shift 48
	MUL  shift 49
	BOOL_VAL  reduce 47
	INT_VAL  reduce 47
	SEMICOLON  reduce 47
	IDENTIFIER  reduce 47
	RIGHT_PARENTHESIS  reduce 47
	COMMA  reduce 47
	LEFT_BRACKET  reduce 47
	RIGHT_BRACKET  reduce 47
	DO  reduce 47
	THEN  reduce 47


state 69
	expr : expr . PLUS expr  (44)
	expr : expr . MINUS expr  (45)
	expr : expr . MUL expr  (46)
	expr : expr . EQ expr  (47)
	expr : expr . LT expr  (48)
	expr : expr LT expr .  (48)
	expr : expr . GT expr  (49)

	PLUS  shift 47
	MINUS  shift 48
	MUL  shift 49
	BOOL_VAL  reduce 48
	INT_VAL  reduce 48
	SEMICOLON  reduce 48
	IDENTIFIER  reduce 48
	RIGHT_PARENTHESIS  reduce 48
	COMMA  reduce 48
	LEFT_BRACKET  reduce 48
	RIGHT_BRACKET  reduce 48
	DO  reduce 48
	THEN  reduce 48


state 70
	expr : expr . PLUS expr  (44)
	expr : expr . MINUS expr  (45)
	expr : expr . MUL expr  (46)
	expr : expr . EQ expr  (47)
	expr : expr . LT expr  (48)
	expr : expr . GT expr  (49)
	expr : expr GT expr .  (49)

	PLUS  shift 47
	MINUS  shift 48
	MUL  shift 49
	BOOL_VAL  reduce 49
	INT_VAL  reduce 49
	SEMICOLON  reduce 49
	IDENTIFIER  reduce 49
	RIGHT_PARENTHESIS  reduce 49
	COMMA  reduce 49
	LEFT_BRACKET  reduce 49
	RIGHT_BRACKET  reduce 49
	DO  reduce 49
	THEN  reduce 49


state 71
	expr : expr . PLUS expr  (44)
	expr : expr PLUS expr .  (44)
	expr : expr . MINUS expr  (45)
	expr : expr . MUL expr  (46)
	expr : expr . EQ expr  (47)
	expr : expr . LT expr  (48)
	expr : expr . GT expr  (49)

	MUL  shift 49
	BOOL_VAL  reduce 44
	INT_VAL  reduce 44
	EQ  reduce 44
	LT  reduce 44
	GT  reduce 44
	PLUS  reduce 44
	MINUS  reduce 44
	SEMICOLON  reduce 44
	IDENTIFIER  reduce 44
	RIGHT_PARENTHESIS  reduce 44
	COMMA  reduce 44
	LEFT_BRACKET  reduce 44
	RIGHT_BRACKET  reduce 44
	DO  reduce 44
	THEN  reduce 44


state 72
	expr : expr . PLUS expr  (44)
	expr : expr . MINUS expr  (45)
	expr : expr MINUS expr .  (45)
	expr : expr . MUL expr  (46)
	expr : expr . EQ expr  (47)
	expr : expr . LT expr  (48)
	expr : expr . GT expr  (49)

	MUL  shift 49
	BOOL_VAL  reduce 45
	INT_VAL  reduce 45
	EQ  reduce 45
	LT  reduce 45
	GT  reduce 45
	PLUS  reduce 45
	MINUS  reduce 45
	SEMICOLON  reduce 45
	IDENTIFIER  reduce 45
	RIGHT_PARENTHESIS  reduce 45
	COMMA  reduce 45
	LEFT_BRACKET  reduce 45
	RIGHT_BRACKET  reduce 45
	DO  reduce 45
	THEN  reduce 45


state 73
	expr : expr . PLUS expr  (44)
	expr : expr . MINUS expr  (45)
	expr : expr . MUL expr  (46)
	expr : expr MUL expr .  (46)
	expr : expr . EQ expr  (47)
	expr : expr . LT expr  (48)
	expr : expr . GT expr  (49)

	.  reduce 46


state 74
	typedef_body : typedef_body . IDENTIFIER COLON type_stmts comma_temp  (4)
	typedef_body : typedef_body . IDENTIFIER COLON recursive_list_value_init  (5)
	recursive_list_value_init : LEFT_PARENTHESIS typedef_body . RIGHT_PARENTHESIS  (12)

	IDENTIFIER  shift 13
	RIGHT_PARENTHESIS  shift 86
	.  error


state 75
	comma_temp : COMMA .  (7)

	.  reduce 7


state 76
	typedef_body : typedef_body IDENTIFIER COLON type_stmts comma_temp .  (4)

	.  reduce 4


state 77
	param_recursive : param_recursive val_ref type_stmts . IDENTIFIER comma_temp  (16)

	IDENTIFIER  shift 87
	.  error


state 78
	function_body : function_body IDENTIFIER LEFT_BRACKET argus_recursive RIGHT_BRACKET . SEMICOLON  (27)

	SEMICOLON  shift 88
	.  error


state 79
	argus_recursive : argus_recursive argus_type . comma_temp  (18)
	comma_temp : .  (8)

	COMMA  shift 75
	BOOL_VAL  reduce 8
	INT_VAL  reduce 8
	MINUS  reduce 8
	IDENTIFIER  reduce 8
	LEFT_BRACKET  reduce 8
	RIGHT_BRACKET  reduce 8

	comma_temp  goto 89


80: shift/reduce conflict (shift 48, reduce 20) on MINUS
state 80
	argus_type : expr .  (20)
	expr : expr . PLUS expr  (44)
	expr : expr . MINUS expr  (45)
	expr : expr . MUL expr  (46)
	expr : expr . EQ expr  (47)
	expr : expr . LT expr  (48)
	expr : expr . GT expr  (49)

	EQ  shift 44
	LT  shift 45
	GT  shift 46
	PLUS  shift 47
	MINUS  shift 48
	MUL  shift 49
	BOOL_VAL  reduce 20
	INT_VAL  reduce 20
	IDENTIFIER  reduce 20
	COMMA  reduce 20
	LEFT_BRACKET  reduce 20
	RIGHT_BRACKET  reduce 20


state 81
	assign_term : LEFT_PARENTHESIS . value_assignment_comma RIGHT_PARENTHESIS  (33)
	value_assignment_comma : .  (38)

	LEFT_PARENTHESIS  shift 90
	IDENTIFIER  reduce 38
	RIGHT_PARENTHESIS  reduce 38

	value_assignment_comma  goto 91


state 82
	assign_term : expr .  (32)
	expr : expr . PLUS expr  (44)
	expr : expr . MINUS expr  (45)
	expr : expr . MUL expr  (46)
	expr : expr . EQ expr  (47)
	expr : expr . LT expr  (48)
	expr : expr . GT expr  (49)

	EQ  shift 44
	LT  shift 45
	GT  shift 46
	PLUS  shift 47
	MINUS  shift 48
	MUL  shift 49
	SEMICOLON  reduce 32


state 83
	function_body : function_body IDENTIFIER dot_term EQ_DOT assign_term . SEMICOLON  (23)

	SEMICOLON  shift 92
	.  error


state 84
	function_body : function_body . IDENTIFIER dot_term EQ_DOT assign_term SEMICOLON  (23)
	function_body : function_body . type_stmts IDENTIFIER SEMICOLON  (24)
	function_body : function_body . WRITE expr SEMICOLON  (25)
	function_body : function_body . READ IDENTIFIER SEMICOLON  (26)
	function_body : function_body . IDENTIFIER LEFT_BRACKET argus_recursive RIGHT_BRACKET SEMICOLON  (27)
	function_body : function_body . WHILE expr DO function_body OD  (28)
	function_body : function_body WHILE expr DO function_body . OD  (28)
	function_body : function_body . IF expr THEN function_body else_stmt FI  (29)
	function_body : function_body . expr SEMICOLON  (30)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	WRITE  shift 18
	READ  shift 19
	MINUS  shift 20
	IDENTIFIER  shift 21
	LEFT_BRACKET  shift 23
	WHILE  shift 24
	OD  shift 93
	IF  shift 25
	BOOL  shift 26
	INT  shift 27
	.  error

	type_stmts  goto 28
	expr  goto 29


state 85
	function_body : function_body . IDENTIFIER dot_term EQ_DOT assign_term SEMICOLON  (23)
	function_body : function_body . type_stmts IDENTIFIER SEMICOLON  (24)
	function_body : function_body . WRITE expr SEMICOLON  (25)
	function_body : function_body . READ IDENTIFIER SEMICOLON  (26)
	function_body : function_body . IDENTIFIER LEFT_BRACKET argus_recursive RIGHT_BRACKET SEMICOLON  (27)
	function_body : function_body . WHILE expr DO function_body OD  (28)
	function_body : function_body . IF expr THEN function_body else_stmt FI  (29)
	function_body : function_body IF expr THEN function_body . else_stmt FI  (29)
	function_body : function_body . expr SEMICOLON  (30)
	else_stmt : .  (40)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	WRITE  shift 18
	READ  shift 19
	MINUS  shift 20
	IDENTIFIER  shift 21
	LEFT_BRACKET  shift 23
	WHILE  shift 24
	IF  shift 25
	ELSE  shift 94
	BOOL  shift 26
	INT  shift 27
	FI  reduce 40

	type_stmts  goto 28
	expr  goto 29
	else_stmt  goto 95


state 86
	recursive_list_value_init : LEFT_PARENTHESIS typedef_body RIGHT_PARENTHESIS .  (12)

	.  reduce 12


state 87
	param_recursive : param_recursive val_ref type_stmts IDENTIFIER . comma_temp  (16)
	comma_temp : .  (8)

	COMMA  shift 75
	VAL  reduce 8
	REF  reduce 8
	RIGHT_BRACKET  reduce 8

	comma_temp  goto 96


state 88
	function_body : function_body IDENTIFIER LEFT_BRACKET argus_recursive RIGHT_BRACKET SEMICOLON .  (27)

	.  reduce 27


state 89
	argus_recursive : argus_recursive argus_type comma_temp .  (18)

	.  reduce 18


state 90
	value_assignment_comma : LEFT_PARENTHESIS . value_assignment_comma RIGHT_PARENTHESIS comma_temp  (36)
	value_assignment_comma : .  (38)

	LEFT_PARENTHESIS  shift 90
	IDENTIFIER  reduce 38
	RIGHT_PARENTHESIS  reduce 38

	value_assignment_comma  goto 97


state 91
	assign_term : LEFT_PARENTHESIS value_assignment_comma . RIGHT_PARENTHESIS  (33)
	value_assignment_comma : value_assignment_comma . IDENTIFIER EQ expr comma_temp  (37)

	IDENTIFIER  shift 98
	RIGHT_PARENTHESIS  shift 99
	.  error


state 92
	function_body : function_body IDENTIFIER dot_term EQ_DOT assign_term SEMICOLON .  (23)

	.  reduce 23


state 93
	function_body : function_body WHILE expr DO function_body OD .  (28)

	.  reduce 28


state 94
	else_stmt : ELSE . function_body  (39)
	function_body : .  (31)

	.  reduce 31

	function_body  goto 100


state 95
	function_body : function_body IF expr THEN function_body else_stmt . FI  (29)

	FI  shift 101
	.  error


state 96
	param_recursive : param_recursive val_ref type_stmts IDENTIFIER comma_temp .  (16)

	.  reduce 16


state 97
	value_assignment_comma : LEFT_PARENTHESIS value_assignment_comma . RIGHT_PARENTHESIS comma_temp  (36)
	value_assignment_comma : value_assignment_comma . IDENTIFIER EQ expr comma_temp  (37)

	IDENTIFIER  shift 98
	RIGHT_PARENTHESIS  shift 102
	.  error


state 98
	value_assignment_comma : value_assignment_comma IDENTIFIER . EQ expr comma_temp  (37)

	EQ  shift 103
	.  error


state 99
	assign_term : LEFT_PARENTHESIS value_assignment_comma RIGHT_PARENTHESIS .  (33)

	.  reduce 33


state 100
	function_body : function_body . IDENTIFIER dot_term EQ_DOT assign_term SEMICOLON  (23)
	function_body : function_body . type_stmts IDENTIFIER SEMICOLON  (24)
	function_body : function_body . WRITE expr SEMICOLON  (25)
	function_body : function_body . READ IDENTIFIER SEMICOLON  (26)
	function_body : function_body . IDENTIFIER LEFT_BRACKET argus_recursive RIGHT_BRACKET SEMICOLON  (27)
	function_body : function_body . WHILE expr DO function_body OD  (28)
	function_body : function_body . IF expr THEN function_body else_stmt FI  (29)
	function_body : function_body . expr SEMICOLON  (30)
	else_stmt : ELSE function_body .  (39)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	WRITE  shift 18
	READ  shift 19
	MINUS  shift 20
	IDENTIFIER  shift 21
	LEFT_BRACKET  shift 23
	WHILE  shift 24
	IF  shift 25
	BOOL  shift 26
	INT  shift 27
	FI  reduce 39

	type_stmts  goto 28
	expr  goto 29


state 101
	function_body : function_body IF expr THEN function_body else_stmt FI .  (29)

	.  reduce 29


state 102
	value_assignment_comma : LEFT_PARENTHESIS value_assignment_comma RIGHT_PARENTHESIS . comma_temp  (36)
	comma_temp : .  (8)

	COMMA  shift 75
	IDENTIFIER  reduce 8
	RIGHT_PARENTHESIS  reduce 8

	comma_temp  goto 104


state 103
	value_assignment_comma : value_assignment_comma IDENTIFIER EQ . expr comma_temp  (37)

	BOOL_VAL  shift 16
	INT_VAL  shift 17
	MINUS  shift 20
	IDENTIFIER  shift 33
	LEFT_BRACKET  shift 23
	.  error

	expr  goto 105


state 104
	value_assignment_comma : LEFT_PARENTHESIS value_assignment_comma RIGHT_PARENTHESIS comma_temp .  (36)

	.  reduce 36


state 105
	value_assignment_comma : value_assignment_comma IDENTIFIER EQ expr . comma_temp  (37)
	expr : expr . PLUS expr  (44)
	expr : expr . MINUS expr  (45)
	expr : expr . MUL expr  (46)
	expr : expr . EQ expr  (47)
	expr : expr . LT expr  (48)
	expr : expr . GT expr  (49)
	comma_temp : .  (8)

	EQ  shift 44
	LT  shift 45
	GT  shift 46
	PLUS  shift 47
	MINUS  shift 48
	MUL  shift 49
	COMMA  shift 75
	IDENTIFIER  reduce 8
	RIGHT_PARENTHESIS  reduce 8

	comma_temp  goto 106


state 106
	value_assignment_comma : value_assignment_comma IDENTIFIER EQ expr comma_temp .  (37)

	.  reduce 37


State 80 contains 1 shift/reduce conflict.


46 terminals, 20 nonterminals
53 grammar rules, 107 states
