(* *)
(* == , this compare refernece, = compare content equality*)
let t_flag = ref true
let t0_free = ref true
let cur_register_count = ref 0

let printBinop singleBinop = match singleBinop with
	| Op_add -> " + "
	| Op_sub -> " - "
	| Op_mul -> " * "
	| Op_div -> " / " 
	| Op_eq ->  " = "
	| Op_lt ->  " < "
	| Op_gt ->  " > "
	| Op_neq -> " != "
	| Op_lte -> " <= "
	| Op_gte -> " >= "
	| Op_and -> " and "

let rec codegen_arithmatic expr = let local_register_count = !cur_register_count in match expr with
	| Ebool(bool_val) -> (cur_register_count := !cur_register_count+1;
												"T" ^ string_of_int local_register_count)

	| Eint(int_val) -> (cur_register_count := !cur_register_count+1;
										    "T" ^ string_of_int local_register_count)

	| Ebinop(expr_one,binop,expr_two) -> (cur_register_count := !cur_register_count - 1;
																				"T" ^ string_of_int local_register_count ^ " = " ^ codegen_arithmatic expr_one ^ printBinop binop ^ codegen_arithmatic expr_two ^ "\n")

	| Eident(ident) -> (cur_register_count := !cur_register_count+1;
											"T" ^ string_of_int local_register_count)

	| Ebracket(expr) -> codegen_arithmatic expr

(*dont know why following function does not work when called from other method*)
let inc_cur_register_count() = cur_register_count := !cur_register_count + 1

let dec_cur_register_count() = cur_register_count := !cur_register_count - 1