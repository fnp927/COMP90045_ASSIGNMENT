   0  $accept : %entry% $end

   1  start_state : type_definition procedure_definition

   2  type_definition : type_definition TYPEDEF type_spec IDENTIFIER
   3                  |

   4  type_spec : primitive_type
   5            | IDENTIFIER
   6            | LEFT_BRACE field_definition RIGHT_BRACE

   7  primitive_type : BOOL
   8                 | INT

   9  field_definition : rec_field_definition IDENTIFIER COLON type_spec

  10  rec_field_definition : field_definition COMMA
  11                       |

  12  procedure_definition : rec_procedure_definition PROC procedure_header variable_definition procedure_body END

  13  rec_procedure_definition : procedure_definition
  14                           |

  15  procedure_header : IDENTIFIER LEFT_PAREN param RIGHT_PAREN

  16  param : rec_param param_passing_indicator type_spec IDENTIFIER
  17        |

  18  rec_param : param COMMA
  19            |

  20  param_passing_indicator : VAL
  21                          | REF

  22  variable_definition : variable_definition type_spec IDENTIFIER
  23                      |

  24  procedure_body : rec_procedure_body atomic_stmt SEMICOLON
  25                 | rec_procedure_body compound_stmt

  26  rec_procedure_body : procedure_body
  27                     |

  28  atomic_stmt : lvalue EQ_COL rvalue
  29              | READ lvalue
  30              | WRITE expr
  31              | IDENTIFIER LEFT_PAREN expr_list RIGHT_PAREN

  32  compound_stmt : IF expr THEN stmt_list else_block FI
  33                | WHILE expr DO stmt_list OD

  34  lvalue : IDENTIFIER
  35         | lvalue DOT IDENTIFIER

  36  rvalue : expr
  37         | LEFT_BRACE field_init RIGHT_BRACE

  38  field_init : rec_field_init IDENTIFIER EQ rvalue

  39  rec_field_init : field_init COMMA
  40                 |

  41  expr : lvalue
  42       | const
  43       | LEFT_PAREN expr RIGHT_PAREN
  44       | expr binop expr
  45       | unop expr

  46  expr_list : rec_expr_list expr
  47            |

  48  rec_expr_list : expr COMMA
  49                |

  50  stmt_list : procedure_body

  51  else_block : ELSE stmt_list
  52             |

  53  binop : PLUS
  54        | MINUS
  55        | MUL
  56        | DIV
  57        | EQ
  58        | NEQ
  59        | LT
  60        | GT
  61        | LTE
  62        | GTE
  63        | AND
  64        | OR

  65  unop : NOT
  66       | UMINUS

  67  const : BOOL_VAL
  68        | INT_VAL
  69        | STRING_VAL

  70  %entry% : '\001' start_state

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . start_state  (70)
	type_definition : .  (3)

	.  reduce 3

	start_state  goto 3
	type_definition  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	%entry% : '\001' start_state .  (70)

	.  reduce 70


state 4
	start_state : type_definition . procedure_definition  (1)
	type_definition : type_definition . TYPEDEF type_spec IDENTIFIER  (2)
	rec_procedure_definition : .  (14)

	TYPEDEF  shift 5
	PROC  reduce 14

	procedure_definition  goto 6
	rec_procedure_definition  goto 7


state 5
	type_definition : type_definition TYPEDEF . type_spec IDENTIFIER  (2)

	IDENTIFIER  shift 8
	LEFT_BRACE  shift 9
	BOOL  shift 10
	INT  shift 11
	.  error

	type_spec  goto 12
	primitive_type  goto 13


state 6
	start_state : type_definition procedure_definition .  (1)
	rec_procedure_definition : procedure_definition .  (13)

	$end  reduce 1
	PROC  reduce 13


state 7
	procedure_definition : rec_procedure_definition . PROC procedure_header variable_definition procedure_body END  (12)

	PROC  shift 14
	.  error


state 8
	type_spec : IDENTIFIER .  (5)

	.  reduce 5


state 9
	type_spec : LEFT_BRACE . field_definition RIGHT_BRACE  (6)
	rec_field_definition : .  (11)

	.  reduce 11

	field_definition  goto 15
	rec_field_definition  goto 16


state 10
	primitive_type : BOOL .  (7)

	.  reduce 7


state 11
	primitive_type : INT .  (8)

	.  reduce 8


state 12
	type_definition : type_definition TYPEDEF type_spec . IDENTIFIER  (2)

	IDENTIFIER  shift 17
	.  error


state 13
	type_spec : primitive_type .  (4)

	.  reduce 4


state 14
	procedure_definition : rec_procedure_definition PROC . procedure_header variable_definition procedure_body END  (12)

	IDENTIFIER  shift 18
	.  error

	procedure_header  goto 19


state 15
	type_spec : LEFT_BRACE field_definition . RIGHT_BRACE  (6)
	rec_field_definition : field_definition . COMMA  (10)

	COMMA  shift 20
	RIGHT_BRACE  shift 21
	.  error


state 16
	field_definition : rec_field_definition . IDENTIFIER COLON type_spec  (9)

	IDENTIFIER  shift 22
	.  error


state 17
	type_definition : type_definition TYPEDEF type_spec IDENTIFIER .  (2)

	.  reduce 2


state 18
	procedure_header : IDENTIFIER . LEFT_PAREN param RIGHT_PAREN  (15)

	LEFT_PAREN  shift 23
	.  error


state 19
	procedure_definition : rec_procedure_definition PROC procedure_header . variable_definition procedure_body END  (12)
	variable_definition : .  (23)

	.  reduce 23

	variable_definition  goto 24


state 20
	rec_field_definition : field_definition COMMA .  (10)

	.  reduce 10


state 21
	type_spec : LEFT_BRACE field_definition RIGHT_BRACE .  (6)

	.  reduce 6


state 22
	field_definition : rec_field_definition IDENTIFIER . COLON type_spec  (9)

	COLON  shift 25
	.  error


state 23
	procedure_header : IDENTIFIER LEFT_PAREN . param RIGHT_PAREN  (15)
	param : .  (17)
	rec_param : .  (19)

	RIGHT_PAREN  reduce 17
	COMMA  reduce 17
	VAL  reduce 19
	REF  reduce 19

	param  goto 26
	rec_param  goto 27


24: shift/reduce conflict (shift 8, reduce 27) on IDENTIFIER
state 24
	procedure_definition : rec_procedure_definition PROC procedure_header variable_definition . procedure_body END  (12)
	variable_definition : variable_definition . type_spec IDENTIFIER  (22)
	rec_procedure_body : .  (27)

	IDENTIFIER  shift 8
	LEFT_BRACE  shift 9
	BOOL  shift 10
	INT  shift 11
	WRITE  reduce 27
	READ  reduce 27
	WHILE  reduce 27
	IF  reduce 27

	type_spec  goto 28
	primitive_type  goto 13
	procedure_body  goto 29
	rec_procedure_body  goto 30


state 25
	field_definition : rec_field_definition IDENTIFIER COLON . type_spec  (9)

	IDENTIFIER  shift 8
	LEFT_BRACE  shift 9
	BOOL  shift 10
	INT  shift 11
	.  error

	type_spec  goto 31
	primitive_type  goto 13


state 26
	procedure_header : IDENTIFIER LEFT_PAREN param . RIGHT_PAREN  (15)
	rec_param : param . COMMA  (18)

	RIGHT_PAREN  shift 32
	COMMA  shift 33
	.  error


state 27
	param : rec_param . param_passing_indicator type_spec IDENTIFIER  (16)

	VAL  shift 34
	REF  shift 35
	.  error

	param_passing_indicator  goto 36


state 28
	variable_definition : variable_definition type_spec . IDENTIFIER  (22)

	IDENTIFIER  shift 37
	.  error


state 29
	procedure_definition : rec_procedure_definition PROC procedure_header variable_definition procedure_body . END  (12)
	rec_procedure_body : procedure_body .  (26)

	END  shift 38
	WRITE  reduce 26
	READ  reduce 26
	IDENTIFIER  reduce 26
	WHILE  reduce 26
	IF  reduce 26


state 30
	procedure_body : rec_procedure_body . atomic_stmt SEMICOLON  (24)
	procedure_body : rec_procedure_body . compound_stmt  (25)

	WRITE  shift 39
	READ  shift 40
	IDENTIFIER  shift 41
	WHILE  shift 42
	IF  shift 43
	.  error

	atomic_stmt  goto 44
	compound_stmt  goto 45
	lvalue  goto 46


state 31
	field_definition : rec_field_definition IDENTIFIER COLON type_spec .  (9)

	.  reduce 9


state 32
	procedure_header : IDENTIFIER LEFT_PAREN param RIGHT_PAREN .  (15)

	.  reduce 15


state 33
	rec_param : param COMMA .  (18)

	.  reduce 18


state 34
	param_passing_indicator : VAL .  (20)

	.  reduce 20


state 35
	param_passing_indicator : REF .  (21)

	.  reduce 21


state 36
	param : rec_param param_passing_indicator . type_spec IDENTIFIER  (16)

	IDENTIFIER  shift 8
	LEFT_BRACE  shift 9
	BOOL  shift 10
	INT  shift 11
	.  error

	type_spec  goto 47
	primitive_type  goto 13


state 37
	variable_definition : variable_definition type_spec IDENTIFIER .  (22)

	.  reduce 22


state 38
	procedure_definition : rec_procedure_definition PROC procedure_header variable_definition procedure_body END .  (12)

	.  reduce 12


state 39
	atomic_stmt : WRITE . expr  (30)

	BOOL_VAL  shift 48
	INT_VAL  shift 49
	STRING_VAL  shift 50
	UMINUS  shift 51
	NOT  shift 52
	IDENTIFIER  shift 53
	LEFT_PAREN  shift 54
	.  error

	lvalue  goto 55
	expr  goto 56
	const  goto 57
	unop  goto 58


state 40
	atomic_stmt : READ . lvalue  (29)

	IDENTIFIER  shift 53
	.  error

	lvalue  goto 59


state 41
	atomic_stmt : IDENTIFIER . LEFT_PAREN expr_list RIGHT_PAREN  (31)
	lvalue : IDENTIFIER .  (34)

	LEFT_PAREN  shift 60
	DOT  reduce 34
	EQ_COL  reduce 34


state 42
	compound_stmt : WHILE . expr DO stmt_list OD  (33)

	BOOL_VAL  shift 48
	INT_VAL  shift 49
	STRING_VAL  shift 50
	UMINUS  shift 51
	NOT  shift 52
	IDENTIFIER  shift 53
	LEFT_PAREN  shift 54
	.  error

	lvalue  goto 55
	expr  goto 61
	const  goto 57
	unop  goto 58


state 43
	compound_stmt : IF . expr THEN stmt_list else_block FI  (32)

	BOOL_VAL  shift 48
	INT_VAL  shift 49
	STRING_VAL  shift 50
	UMINUS  shift 51
	NOT  shift 52
	IDENTIFIER  shift 53
	LEFT_PAREN  shift 54
	.  error

	lvalue  goto 55
	expr  goto 62
	const  goto 57
	unop  goto 58


state 44
	procedure_body : rec_procedure_body atomic_stmt . SEMICOLON  (24)

	SEMICOLON  shift 63
	.  error


state 45
	procedure_body : rec_procedure_body compound_stmt .  (25)

	.  reduce 25


state 46
	atomic_stmt : lvalue . EQ_COL rvalue  (28)
	lvalue : lvalue . DOT IDENTIFIER  (35)

	DOT  shift 64
	EQ_COL  shift 65
	.  error


state 47
	param : rec_param param_passing_indicator type_spec . IDENTIFIER  (16)

	IDENTIFIER  shift 66
	.  error


state 48
	const : BOOL_VAL .  (67)

	.  reduce 67


state 49
	const : INT_VAL .  (68)

	.  reduce 68


state 50
	const : STRING_VAL .  (69)

	.  reduce 69


state 51
	unop : UMINUS .  (66)

	.  reduce 66


state 52
	unop : NOT .  (65)

	.  reduce 65


state 53
	lvalue : IDENTIFIER .  (34)

	.  reduce 34


state 54
	expr : LEFT_PAREN . expr RIGHT_PAREN  (43)

	BOOL_VAL  shift 48
	INT_VAL  shift 49
	STRING_VAL  shift 50
	UMINUS  shift 51
	NOT  shift 52
	IDENTIFIER  shift 53
	LEFT_PAREN  shift 54
	.  error

	lvalue  goto 55
	expr  goto 67
	const  goto 57
	unop  goto 58


state 55
	lvalue : lvalue . DOT IDENTIFIER  (35)
	expr : lvalue .  (41)

	DOT  shift 64
	EQ  reduce 41
	NEQ  reduce 41
	LT  reduce 41
	LTE  reduce 41
	GT  reduce 41
	GTE  reduce 41
	PLUS  reduce 41
	MINUS  reduce 41
	MUL  reduce 41
	DIV  reduce 41
	SEMICOLON  reduce 41
	AND  reduce 41
	OR  reduce 41
	RIGHT_PAREN  reduce 41
	COMMA  reduce 41
	RIGHT_BRACE  reduce 41
	DO  reduce 41
	THEN  reduce 41


state 56
	atomic_stmt : WRITE expr .  (30)
	expr : expr . binop expr  (44)

	EQ  shift 68
	NEQ  shift 69
	LT  shift 70
	LTE  shift 71
	GT  shift 72
	GTE  shift 73
	PLUS  shift 74
	MINUS  shift 75
	MUL  shift 76
	DIV  shift 77
	AND  shift 78
	OR  shift 79
	SEMICOLON  reduce 30

	binop  goto 80


state 57
	expr : const .  (42)

	.  reduce 42


state 58
	expr : unop . expr  (45)

	BOOL_VAL  shift 48
	INT_VAL  shift 49
	STRING_VAL  shift 50
	UMINUS  shift 51
	NOT  shift 52
	IDENTIFIER  shift 53
	LEFT_PAREN  shift 54
	.  error

	lvalue  goto 55
	expr  goto 81
	const  goto 57
	unop  goto 58


state 59
	atomic_stmt : READ lvalue .  (29)
	lvalue : lvalue . DOT IDENTIFIER  (35)

	DOT  shift 64
	SEMICOLON  reduce 29


60: shift/reduce conflict (shift 48, reduce 49) on BOOL_VAL
60: shift/reduce conflict (shift 49, reduce 49) on INT_VAL
60: shift/reduce conflict (shift 50, reduce 49) on STRING_VAL
60: shift/reduce conflict (shift 51, reduce 49) on UMINUS
60: shift/reduce conflict (shift 52, reduce 49) on NOT
60: shift/reduce conflict (shift 53, reduce 49) on IDENTIFIER
60: shift/reduce conflict (shift 54, reduce 49) on LEFT_PAREN
state 60
	atomic_stmt : IDENTIFIER LEFT_PAREN . expr_list RIGHT_PAREN  (31)
	expr_list : .  (47)
	rec_expr_list : .  (49)

	BOOL_VAL  shift 48
	INT_VAL  shift 49
	STRING_VAL  shift 50
	UMINUS  shift 51
	NOT  shift 52
	IDENTIFIER  shift 53
	LEFT_PAREN  shift 54
	RIGHT_PAREN  reduce 47

	lvalue  goto 55
	expr  goto 82
	expr_list  goto 83
	const  goto 57
	unop  goto 58
	rec_expr_list  goto 84


state 61
	compound_stmt : WHILE expr . DO stmt_list OD  (33)
	expr : expr . binop expr  (44)

	EQ  shift 68
	NEQ  shift 69
	LT  shift 70
	LTE  shift 71
	GT  shift 72
	GTE  shift 73
	PLUS  shift 74
	MINUS  shift 75
	MUL  shift 76
	DIV  shift 77
	AND  shift 78
	OR  shift 79
	DO  shift 85
	.  error

	binop  goto 80


state 62
	compound_stmt : IF expr . THEN stmt_list else_block FI  (32)
	expr : expr . binop expr  (44)

	EQ  shift 68
	NEQ  shift 69
	LT  shift 70
	LTE  shift 71
	GT  shift 72
	GTE  shift 73
	PLUS  shift 74
	MINUS  shift 75
	MUL  shift 76
	DIV  shift 77
	AND  shift 78
	OR  shift 79
	THEN  shift 86
	.  error

	binop  goto 80


state 63
	procedure_body : rec_procedure_body atomic_stmt SEMICOLON .  (24)

	.  reduce 24


state 64
	lvalue : lvalue DOT . IDENTIFIER  (35)

	IDENTIFIER  shift 87
	.  error


state 65
	atomic_stmt : lvalue EQ_COL . rvalue  (28)

	BOOL_VAL  shift 48
	INT_VAL  shift 49
	STRING_VAL  shift 50
	UMINUS  shift 51
	NOT  shift 52
	IDENTIFIER  shift 53
	LEFT_PAREN  shift 54
	LEFT_BRACE  shift 88
	.  error

	lvalue  goto 55
	rvalue  goto 89
	expr  goto 90
	const  goto 57
	unop  goto 58


state 66
	param : rec_param param_passing_indicator type_spec IDENTIFIER .  (16)

	.  reduce 16


state 67
	expr : LEFT_PAREN expr . RIGHT_PAREN  (43)
	expr : expr . binop expr  (44)

	EQ  shift 68
	NEQ  shift 69
	LT  shift 70
	LTE  shift 71
	GT  shift 72
	GTE  shift 73
	PLUS  shift 74
	MINUS  shift 75
	MUL  shift 76
	DIV  shift 77
	AND  shift 78
	OR  shift 79
	RIGHT_PAREN  shift 91
	.  error

	binop  goto 80


state 68
	binop : EQ .  (57)

	.  reduce 57


state 69
	binop : NEQ .  (58)

	.  reduce 58


state 70
	binop : LT .  (59)

	.  reduce 59


state 71
	binop : LTE .  (61)

	.  reduce 61


state 72
	binop : GT .  (60)

	.  reduce 60


state 73
	binop : GTE .  (62)

	.  reduce 62


state 74
	binop : PLUS .  (53)

	.  reduce 53


state 75
	binop : MINUS .  (54)

	.  reduce 54


state 76
	binop : MUL .  (55)

	.  reduce 55


state 77
	binop : DIV .  (56)

	.  reduce 56


state 78
	binop : AND .  (63)

	.  reduce 63


state 79
	binop : OR .  (64)

	.  reduce 64


state 80
	expr : expr binop . expr  (44)

	BOOL_VAL  shift 48
	INT_VAL  shift 49
	STRING_VAL  shift 50
	UMINUS  shift 51
	NOT  shift 52
	IDENTIFIER  shift 53
	LEFT_PAREN  shift 54
	.  error

	lvalue  goto 55
	expr  goto 92
	const  goto 57
	unop  goto 58


81: shift/reduce conflict (shift 68, reduce 45) on EQ
81: shift/reduce conflict (shift 69, reduce 45) on NEQ
81: shift/reduce conflict (shift 70, reduce 45) on LT
81: shift/reduce conflict (shift 71, reduce 45) on LTE
81: shift/reduce conflict (shift 72, reduce 45) on GT
81: shift/reduce conflict (shift 73, reduce 45) on GTE
81: shift/reduce conflict (shift 74, reduce 45) on PLUS
81: shift/reduce conflict (shift 75, reduce 45) on MINUS
81: shift/reduce conflict (shift 76, reduce 45) on MUL
81: shift/reduce conflict (shift 77, reduce 45) on DIV
81: shift/reduce conflict (shift 78, reduce 45) on AND
81: shift/reduce conflict (shift 79, reduce 45) on OR
state 81
	expr : expr . binop expr  (44)
	expr : unop expr .  (45)

	EQ  shift 68
	NEQ  shift 69
	LT  shift 70
	LTE  shift 71
	GT  shift 72
	GTE  shift 73
	PLUS  shift 74
	MINUS  shift 75
	MUL  shift 76
	DIV  shift 77
	AND  shift 78
	OR  shift 79
	SEMICOLON  reduce 45
	RIGHT_PAREN  reduce 45
	COMMA  reduce 45
	RIGHT_BRACE  reduce 45
	DO  reduce 45
	THEN  reduce 45

	binop  goto 80


state 82
	expr : expr . binop expr  (44)
	rec_expr_list : expr . COMMA  (48)

	EQ  shift 68
	NEQ  shift 69
	LT  shift 70
	LTE  shift 71
	GT  shift 72
	GTE  shift 73
	PLUS  shift 74
	MINUS  shift 75
	MUL  shift 76
	DIV  shift 77
	AND  shift 78
	OR  shift 79
	COMMA  shift 93
	.  error

	binop  goto 80


state 83
	atomic_stmt : IDENTIFIER LEFT_PAREN expr_list . RIGHT_PAREN  (31)

	RIGHT_PAREN  shift 94
	.  error


state 84
	expr_list : rec_expr_list . expr  (46)

	BOOL_VAL  shift 48
	INT_VAL  shift 49
	STRING_VAL  shift 50
	UMINUS  shift 51
	NOT  shift 52
	IDENTIFIER  shift 53
	LEFT_PAREN  shift 54
	.  error

	lvalue  goto 55
	expr  goto 95
	const  goto 57
	unop  goto 58


state 85
	compound_stmt : WHILE expr DO . stmt_list OD  (33)
	rec_procedure_body : .  (27)

	.  reduce 27

	procedure_body  goto 96
	rec_procedure_body  goto 30
	stmt_list  goto 97


state 86
	compound_stmt : IF expr THEN . stmt_list else_block FI  (32)
	rec_procedure_body : .  (27)

	.  reduce 27

	procedure_body  goto 96
	rec_procedure_body  goto 30
	stmt_list  goto 98


state 87
	lvalue : lvalue DOT IDENTIFIER .  (35)

	.  reduce 35


state 88
	rvalue : LEFT_BRACE . field_init RIGHT_BRACE  (37)
	rec_field_init : .  (40)

	.  reduce 40

	field_init  goto 99
	rec_field_init  goto 100


state 89
	atomic_stmt : lvalue EQ_COL rvalue .  (28)

	.  reduce 28


state 90
	rvalue : expr .  (36)
	expr : expr . binop expr  (44)

	EQ  shift 68
	NEQ  shift 69
	LT  shift 70
	LTE  shift 71
	GT  shift 72
	GTE  shift 73
	PLUS  shift 74
	MINUS  shift 75
	MUL  shift 76
	DIV  shift 77
	AND  shift 78
	OR  shift 79
	SEMICOLON  reduce 36
	COMMA  reduce 36
	RIGHT_BRACE  reduce 36

	binop  goto 80


state 91
	expr : LEFT_PAREN expr RIGHT_PAREN .  (43)

	.  reduce 43


92: shift/reduce conflict (shift 68, reduce 44) on EQ
92: shift/reduce conflict (shift 69, reduce 44) on NEQ
92: shift/reduce conflict (shift 70, reduce 44) on LT
92: shift/reduce conflict (shift 71, reduce 44) on LTE
92: shift/reduce conflict (shift 72, reduce 44) on GT
92: shift/reduce conflict (shift 73, reduce 44) on GTE
92: shift/reduce conflict (shift 74, reduce 44) on PLUS
92: shift/reduce conflict (shift 75, reduce 44) on MINUS
92: shift/reduce conflict (shift 76, reduce 44) on MUL
92: shift/reduce conflict (shift 77, reduce 44) on DIV
92: shift/reduce conflict (shift 78, reduce 44) on AND
92: shift/reduce conflict (shift 79, reduce 44) on OR
state 92
	expr : expr . binop expr  (44)
	expr : expr binop expr .  (44)

	EQ  shift 68
	NEQ  shift 69
	LT  shift 70
	LTE  shift 71
	GT  shift 72
	GTE  shift 73
	PLUS  shift 74
	MINUS  shift 75
	MUL  shift 76
	DIV  shift 77
	AND  shift 78
	OR  shift 79
	SEMICOLON  reduce 44
	RIGHT_PAREN  reduce 44
	COMMA  reduce 44
	RIGHT_BRACE  reduce 44
	DO  reduce 44
	THEN  reduce 44

	binop  goto 80


state 93
	rec_expr_list : expr COMMA .  (48)

	.  reduce 48


state 94
	atomic_stmt : IDENTIFIER LEFT_PAREN expr_list RIGHT_PAREN .  (31)

	.  reduce 31


state 95
	expr : expr . binop expr  (44)
	expr_list : rec_expr_list expr .  (46)

	EQ  shift 68
	NEQ  shift 69
	LT  shift 70
	LTE  shift 71
	GT  shift 72
	GTE  shift 73
	PLUS  shift 74
	MINUS  shift 75
	MUL  shift 76
	DIV  shift 77
	AND  shift 78
	OR  shift 79
	RIGHT_PAREN  reduce 46

	binop  goto 80


state 96
	rec_procedure_body : procedure_body .  (26)
	stmt_list : procedure_body .  (50)

	WRITE  reduce 26
	READ  reduce 26
	IDENTIFIER  reduce 26
	WHILE  reduce 26
	OD  reduce 50
	IF  reduce 26
	ELSE  reduce 50
	FI  reduce 50


state 97
	compound_stmt : WHILE expr DO stmt_list . OD  (33)

	OD  shift 101
	.  error


state 98
	compound_stmt : IF expr THEN stmt_list . else_block FI  (32)
	else_block : .  (52)

	ELSE  shift 102
	FI  reduce 52

	else_block  goto 103


state 99
	rvalue : LEFT_BRACE field_init . RIGHT_BRACE  (37)
	rec_field_init : field_init . COMMA  (39)

	COMMA  shift 104
	RIGHT_BRACE  shift 105
	.  error


state 100
	field_init : rec_field_init . IDENTIFIER EQ rvalue  (38)

	IDENTIFIER  shift 106
	.  error


state 101
	compound_stmt : WHILE expr DO stmt_list OD .  (33)

	.  reduce 33


state 102
	else_block : ELSE . stmt_list  (51)
	rec_procedure_body : .  (27)

	.  reduce 27

	procedure_body  goto 96
	rec_procedure_body  goto 30
	stmt_list  goto 107


state 103
	compound_stmt : IF expr THEN stmt_list else_block . FI  (32)

	FI  shift 108
	.  error


state 104
	rec_field_init : field_init COMMA .  (39)

	.  reduce 39


state 105
	rvalue : LEFT_BRACE field_init RIGHT_BRACE .  (37)

	.  reduce 37


state 106
	field_init : rec_field_init IDENTIFIER . EQ rvalue  (38)

	EQ  shift 109
	.  error


state 107
	else_block : ELSE stmt_list .  (51)

	.  reduce 51


state 108
	compound_stmt : IF expr THEN stmt_list else_block FI .  (32)

	.  reduce 32


state 109
	field_init : rec_field_init IDENTIFIER EQ . rvalue  (38)

	BOOL_VAL  shift 48
	INT_VAL  shift 49
	STRING_VAL  shift 50
	UMINUS  shift 51
	NOT  shift 52
	IDENTIFIER  shift 53
	LEFT_PAREN  shift 54
	LEFT_BRACE  shift 88
	.  error

	lvalue  goto 55
	rvalue  goto 110
	expr  goto 90
	const  goto 57
	unop  goto 58


state 110
	field_init : rec_field_init IDENTIFIER EQ rvalue .  (38)

	.  reduce 38


Rules never reduced:
	rec_expr_list :  (49)


State 24 contains 1 shift/reduce conflict.
State 60 contains 7 shift/reduce conflicts.
State 81 contains 12 shift/reduce conflicts.
State 92 contains 12 shift/reduce conflicts.


49 terminals, 31 nonterminals
71 grammar rules, 111 states
